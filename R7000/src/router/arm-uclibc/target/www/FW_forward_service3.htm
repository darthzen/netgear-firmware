<!DOCTYPE HTML>
<html>
<head>
<%11%>
<title>NETGEAR Router <%12%></title>
<link rel="stylesheet" href="<%13%>">
<link rel="stylesheet" href="css/scrollbar.css">
<link rel="stylesheet" href="css/button.css">

<script src="jquery.js"></script>
<script src="script/jquery.mousewheel.js"></script>
<script type="text/javascript" src="script/jquery.jscrollpane.min.js"></script>

<script src="script/script.js"></script>
<link rel="stylesheet" href="form.css">
<STYLE TYPE="text/javascript">
	classes.num.all.fontFamily = "Courier";
	classes.num.all.fontSize = "10pt" ;
</style>
<%14%>
<script language="javascript" type="text/javascript">
<!--
var srvtypeSel = -1;

var extArray = new Array(new Array(),new Array());
var intArray = new Array(new Array(),new Array());

  
    $(document).ready(function()
    {	
//        $('.scroll-pane').jScrollPane('scrollbarMargin:5px');
        $("#target").submit(function() {
            buttonFilter();
        });

    });


    function setHelpIframeVisible(){
        $('.help-frame-div').css("visibility","visible");
    }


    function showHelpIframe() {

        var imgSrc=document.getElementById('help-button');

        if(imgSrc.src.search("up")>=0)
        {
            $(".help-frame-div").show();
            window.frames["helpframe"].$('#content').jScrollPane({showArrows:true});
            imgSrc.src="img/helparrowdown-icon.gif";
        }
        else
        {
            $(".help-frame-div").hide();
            imgSrc.src="img/helparrowup-icon.gif";
            setTimeout(setHelpIframeVisible,500);
        }
        if((navigator.appName.indexOf("Internet Explorer")==-1) ||
           (navigator.appVersion.indexOf("MSIE 9")==-1))
             change_size();

    }
    function moveToHTMLend()
    {
        window.location.href='#helpframe-anchor';
        setHelpIframeVisible();
    }


    function loadhelp(fname,anchname)
    {
                var pane = window.frames["helpframe"].$('#content');
                var imgSrc=document.getElementById('help-button');
                if(imgSrc.src.search("up")<0)
                {

                        $(".help-frame-div").show();
                        pane.jScrollPane({showArrows:true});


                        if ((loadhelp.arguments.length == 1 ) || (anchname == "" ))
                        {
                                window.frames["helpframe"].location.href=fname+"_h.htm";
                                $(".help-frame-div").show();
                        }
                        else
                        {
                                window.frames["helpframe"].location.href=fname+"_h.htm#" + anchname;
                                $(".help-frame-div").show();
                        }

                        $(".help-frame-div").show();
                        pane.jScrollPane({showArrows:true});

                }
    }

   

function init()
{
    var cf = document.forms[0];
    var data = cf.entryData.value.split(";");
    var useSameRange;

    useSameRange = 1;
    
    if ((cf.entryData.value != "") || (cf.oldService2.value != ""))
    {
        if (cf.oldService2.value != "")
            cf.portname.value = cf.oldService2.value;
        else
            cf.portname.value = cf.oldService.value;

        cf.port_start.value = cf.oldSport.value;
        
        if (cf.oldInternalSport.value == cf.oldSport.value)
            useSameRange = 1;
        else 
            useSameRange = 0;
        
        if (useSameRange == 1)
        {
            cf.same_range.checked = true;
            cf.internal_port_start.disabled=true;
            cf.internal_port_start.value = cf.port_start.value;
            document.getElementById("intportcolor").style.color="gray";
            document.getElementById("intporttype").style.color="gray";
        }
        else
        {
            cf.same_range.checked = false;
            cf.internal_port_start.disabled=false;
            cf.internal_port_start.value = cf.oldInternalSport.value;
            document.getElementById("intportcolor").style.color="black";
            document.getElementById("intporttype").style.color="black";
        }

        if ( cf.oldType.value == "BOTH" )
            cf.srvtype.selectedIndex = 0;
        else if ( cf.oldType.value == "TCP" )
            cf.srvtype.selectedIndex = 1;
        else if ( cf.oldType.value == "UDP" )
            cf.srvtype.selectedIndex = 2;
        srvtypeSel = cf.srvtype.selectedIndex;
        var servIP = cf.oldIP.value.split(".");
        cf.server_ip1.value = servIP[0];
        cf.server_ip2.value = servIP[1];
        cf.server_ip3.value = servIP[2];
        cf.server_ip4.value = servIP[3];
    }
    else
    {
        var lanSplit = cf.lanIP.value.split(".");

        cf.server_ip1.value=lanSplit[0];
        cf.server_ip2.value=lanSplit[1];
        cf.server_ip3.value=lanSplit[2];
        cf.server_ip4.value="";
        
        if (useSameRange == 1)
        {
            cf.same_range.checked = true;
            cf.internal_port_start.disabled=true;
            document.getElementById("intportcolor").style.color="gray";
            document.getElementById("intporttype").style.color="gray";
        }
        else
        {
            cf.same_range.checked = false;
            cf.internal_port_start.disabled=false;
            document.getElementById("intportcolor").style.color="black";
            document.getElementById("intporttype").style.color="black";
        }
    }
    return true;
}

function sel(ipaddr)
{
	var cf = document.forms[0];
	var ip = ipaddr.split(".");
	cf.server_ip1.value = ip[0];
	cf.server_ip2.value = ip[1];
	cf.server_ip3.value = ip[2];
	cf.server_ip4.value = ip[3];
}

function isValibPort(str)
{
    var i;
    if(str.value == "")
    {
        return true;
    }
    for(i = 0; i<str.value.length; i++) 
    {
        var c = str.value.substring(i, i+1);
        if(("0" <= c && c <= "9") || ("," == c) || ("-" == c)|| (" " == c)) 
        {
            continue;
        }
        else
        {
            return true;
        }
    }
    return false;
}

function CheckMerge(exportArray,inportArray,portLength)
{
    var z;
    var k;
    for(z = 0; z < portLength; z++)
    {
        for(k = z+1; k < portLength; k++)
        {
            if(exportArray[0][z] < exportArray[0][k])
            {
                if(exportArray[1][z] == exportArray[0][k])
                {
                    if(inportArray[1][z] != inportArray[0][k])
                        return true;
                }
                if((exportArray[1][z] > exportArray[0][k])&&(exportArray[1][z] < exportArray[1][k]))
                {
                    if((exportArray[1][z]-exportArray[0][k]) != (inportArray[1][z]-inportArray[0][k]))
                        return true;
                }
                if(exportArray[1][z] >= exportArray[1][k])
                {
                    if((inportArray[0][z] > inportArray[0][k])||(inportArray[1][z] < inportArray[1][k]))
                        return true;
                }
            }
            if(inportArray[0][z] < inportArray[0][k])
            {
                if(inportArray[1][z] == inportArray[0][k])
                {
                    if(exportArray[1][z] != exportArray[0][k])
                        return true;
                }
                if((inportArray[1][z] > inportArray[0][k])&&(inportArray[1][z] < inportArray[1][k]))
                {
                    if((inportArray[1][z]-inportArray[0][k]) != (exportArray[1][z]-exportArray[0][k]))
                        return true;
                }
                if(inportArray[1][z] >= inportArray[1][k])
                {
                    if((exportArray[0][z] > exportArray[0][k])||(exportArray[1][z] < exportArray[1][k]))
                        return true;
                }
            }
            

            if(exportArray[0][z] == exportArray[0][k])
            {
                if(inportArray[0][z] != inportArray[0][k])
                    return true;
            }
            if(inportArray[0][z] == inportArray[0][k])
            {
                if(exportArray[0][z] != exportArray[0][k])
                    return true;
            }
            

            if((exportArray[0][z] > exportArray[0][k])&&(exportArray[0][z] < exportArray[1][k]))
            {
                if(exportArray[1][z] > exportArray[1][k])
                {
                    if((exportArray[1][k]-exportArray[0][z]) != (inportArray[1][k]-inportArray[0][z]))
                        return true; 
                }
                if(exportArray[1][z] <= exportArray[1][k])
                {
                    if((inportArray[1][z] > inportArray[1][k])||(inportArray[0][z] < inportArray[0][k]))
                        return true;
                }
            }
            if((inportArray[0][z] > inportArray[0][k])&&(inportArray[0][z] < inportArray[1][k]))
            {
                if(inportArray[1][z] > inportArray[1][k])
                {
                    if((inportArray[1][k]-inportArray[0][z]) != (exportArray[1][k]-exportArray[0][z]))
                        return true; 
                }
                if(inportArray[1][z] <= inportArray[1][k])
                {
                    if((exportArray[1][z] > exportArray[1][k])||(exportArray[0][z] < exportArray[0][k]))
                        return true;
                }
            }
            
            
            if(exportArray[0][z] == exportArray[1][k])
            {
                if(inportArray[0][z] != inportArray[1][k])
                    return true;
            }
            if(inportArray[0][z] == inportArray[1][k])
            {
                if(exportArray[0][z] != exportArray[1][k])
                    return true;
            }
        }
    }
    return false;
}
function RuleCheck(sport,bport,insport,inbport)
{
    var cf = document.forms[0];
    var pre_service = cf.pf_services_tbl.value.split("@");
    var i;
    var k;
    var rulelength = pre_service.length - 1;
    var inputtype; 
    if(cf.srvtype.options[cf.srvtype.selectedIndex].value == "TCP")
    {
        inputtype = 6;
    }
    else if(cf.srvtype.options[cf.srvtype.selectedIndex].value == "UDP")
    {
        inputtype = 17;
    }
    else if(cf.srvtype.options[cf.srvtype.selectedIndex].value == "TCP/UDP")
    {
        inputtype = -1;
    }
    
    if(pre_service.length <= 1)
    {
        return false;
    }
    else
    {
        for(i = 0; i < rulelength; i++)
        {
            var pre_rule = pre_service[i];
            var pre_port = pre_rule.split(";");
            var pre_name = pre_port[0];
            var pre_type = pre_port[1];
            var pre_export = pre_port[2];
            var pre_inport = pre_port[3];
            var pre_exportsplit = pre_export.split(",");
            var pre_inportsplit = pre_inport.split(",");
            
            if(pre_name != cf.oldService3.value)
            {
                if(cf.portname.value == pre_name)
                {
                    return true;
                }
                
                for(k = 0; k < pre_exportsplit.length; k++)
                {
                    var portrange = pre_exportsplit[k];
                    var prsplit = portrange.split("-");
                    var pextport_s = prsplit[0];
                    var pextport_b = prsplit[1];
                    
                    var inportrange = pre_inportsplit[k];
                    var inprsplit = inportrange.split("-");
                    var pintport_s = inprsplit[0];
                    var pintport_b = inprsplit[1];
                    
                    if(prsplit.length == 1)
                    {
                        if((pextport_s >= sport)&&(pextport_s <= bport))
                        {
                            if((pre_type == inputtype) || (pre_type == -1) ||(inputtype == -1))
                            {
                                return true;
                            }
                        }
                        if((pintport_s >= insport)&&(pintport_s <= inbport))
                        {
                            if((pre_type == inputtype) || (pre_type == -1) ||(inputtype == -1))
                            {
                                return true;
                            }
                        }
                    }
                    else if(prsplit.length == 2)
                    {
                        if((pextport_s <= sport) && (pextport_b >= sport))
                        {
                            if((pre_type == inputtype) || (pre_type == -1) ||(inputtype == -1))
                            {
                                return true;
                            }
                        }
                        if((pextport_s >= sport) && (pextport_s <= bport))
                        {
                            if((pre_type == inputtype) || (pre_type == -1) ||(inputtype == -1))
                            {
                                return true;
                            }
                        }
                        if((pintport_s <= insport) && (pintport_b >= insport))
                        {
                            if((pre_type == inputtype) || (pre_type == -1) ||(inputtype == -1))
                            {
                                return true;
                            }
                        }
                        if((pintport_s >= insport) && (pintport_s <= inbport))
                        {
                            if((pre_type == inputtype) || (pre_type == -1) ||(inputtype == -1))
                            {
                                return true;
                            }
                        }
                    }
                }
            }
        }
    }
    return false;
}
function CheckPort(extportstr,intportstr)
{
    var exttmplport;
    var inttmplport;
    var tmpport;
    var i;
    

    if(isValibPort(extportstr)) 
    {
        alert("<%1019%>");
        return true;
    }
    if(isValibPort(intportstr)) 
    {
        alert("<%1020%>");
        return true;
    }
    
    exttmplport = extportstr.value.split(",");
    inttmplport = intportstr.value.split(",");
    
    if(exttmplport.length != inttmplport.length)
    {
        alert("<%1021%>");
        return true;
    }
    for(i = 0; i < exttmplport.length; i++)
    {
        var exttport1 = exttmplport[i];
        var inttport1 = inttmplport[i];
        var exttport2 = exttport1.split("-");
        var inttport2 = inttport1.split("-");
        var extmpport1;
        var extmpport2;
        var intmpport1;
        var intmpport2;
        
        extmpport1 = parseInt(exttport2[0],10);
        extmpport2 = parseInt(exttport2[1],10);
        intmpport1 = parseInt(inttport2[0],10);
        intmpport2 = parseInt(inttport2[1],10);
        
        if(exttport2.length > 2)
        {
            alert("<%1019%>");
            return true;
        }
        if(inttport2.length > 2)
        {
            alert("<%1020%>");
            return true;
        }
        
        if((exttport2.length == 2)&&(inttport2.length == 1))
        {
            if(extmpport1!= extmpport2)
            {
                alert("<%1021%>");
                return true;
            }
            exttport2.length = 1;
        }
        if((exttport2.length == 1)&&(inttport2.length == 2))
        {
            if(intmpport1!= intmpport2)
            {
                alert("<%1021%>");
                return true;
            }
            inttport2.length = 1;
        }
        if(exttport2.length == inttport2.length)
        {
            if(extmpport1 == null || extmpport1 =="" || extmpport1 < 1 || extmpport1 > 65534)
            {
                alert("<%1019%>");
                return true;
            }
            if(intmpport1 == null || intmpport1=="" || intmpport1 < 1 || intmpport1 > 65534)
            {
                alert("<%1020%>");
                return true;
            } 
            
            if(exttport2.length == 2)
            {
                if(extmpport2 == null || extmpport2 =="" || extmpport2 < 1 || extmpport2 > 65534)
                {
                    alert("<%1019%>");
                    return true;
                }
                if(intmpport2 == null || intmpport2 =="" || intmpport2 < 1 || intmpport2 > 65534)
                {
                    alert("<%1020%>");
                    return true;
                }
                
                if(extmpport1 > extmpport2)
                {
                    tmpport = extmpport1;
                    extmpport1 = extmpport2;
                    extmpport2 = tmpport;
                }
                if(intmpport1 > intmpport2)
                {
                    tmpport = intmpport1;
                    intmpport1 = intmpport2;
                    intmpport2 = tmpport;
                }
                
                if((extmpport2 - extmpport1)!= (intmpport2 - intmpport1))
                {
                    alert("<%1021%>");
                    return true;
                }
            }
            
            if(exttport2.length == 1)
            {
                //Add the arrary to store the data
                extArray[0][i]=extmpport1;
                extArray[1][i]=extmpport1;
                intArray[0][i]=intmpport1;
                intArray[1][i]=intmpport1;
//                if(RuleCheck(extmpport1,extmpport1,intmpport1,intmpport1))
//                {
//                    alert("<%1022%>");
//                    return true;
//                }
            }
            else if(exttport2.length == 2)
            {
                //Add the arrary to store the data
                extArray[0][i]=extmpport1;
                extArray[1][i]=extmpport2;
                intArray[0][i]=intmpport1;
                intArray[1][i]=intmpport2;
//                if(RuleCheck(extmpport1,extmpport2,intmpport1,intmpport2))
//                {
//                    alert("<%1022%>");
//                    return true;
//                }
            }
        }
        
    }

    // Add the merge check of external and internal port
    if(CheckMerge(extArray,intArray,exttmplport.length))
    {
        alert("<%1021%>");
        return true;
    }
    return false;
}

function Check()
{
    var cf = document.forms[0];

    if(cf.portname.value==""||cf.portname.value.match( /[^\x20-\x7E]/ ))
    {
        alert("<%1023%>");
        cf.portname.focus();
        return false;
    }
    if(CheckPort(cf.port_start,cf.internal_port_start))
    {
        return false;
    }
    if(checkIP(cf.server_ip1,cf.server_ip2,cf.server_ip3,cf.server_ip4,254)
        || parseInt(cf.server_ip4.value,10) == 0)
    {
        alert("<%10%>")
        return false;
    }
    else
    {
        cf.server_ip1.value = parseInt(cf.server_ip1.value,10);
        cf.server_ip2.value = parseInt(cf.server_ip2.value,10);
        cf.server_ip3.value = parseInt(cf.server_ip3.value,10);
        cf.server_ip4.value = parseInt(cf.server_ip4.value,10);
    }
    return true;
}

function Final()
{
    var cf = document.forms[0];

	if(cf.entryData.value != "")
	    cf.action.value = "edit_apply";
	else
	    cf.action.value = "add_apply";

    cf.newType.value = cf.srvtype.options[cf.srvtype.selectedIndex].value;
	cf.newIP.value = cf.server_ip1.value + "." + cf.server_ip2.value + "." +
	                 cf.server_ip3.value + "." + cf.server_ip4.value;

    if( (cf.entryData.value != "")&&
        (cf.oldIP.value == cf.newIP.value)&&
        (cf.srvtype.selectedIndex == srvtypeSel)&&
        (cf.port_start.value == cf.oldSport.value)&&
        (cf.internal_port_start.value == cf.oldInternalSport.value) 
      )
    {
        cf.entryData.value = "NoEdit";
    }
    else
    {
        cf.entryData.value = "";
    }
                  
    return true;
}

function setInternalPortDisable()
{
    var cf = document.forms[0];
    if (cf.same_range.checked)
    {
        cf.internal_port_start.disabled=true;
        cf.internal_port_start.value = cf.port_start.value;
        document.getElementById("intportcolor").style.color="gray";
        document.getElementById("intporttype").style.color="gray";
        //cf.internal_port_end.value = cf.port_end.value;
    }
    else
    {
        cf.internal_port_start.disabled=false;
        document.getElementById("intportcolor").style.color="black";
        document.getElementById("intporttype").style.color="black";
    }
}

function internal_port_update()
{
    var cf = document.forms[0];
    
    if (cf.same_range.checked)
	{
	    cf.internal_port_start.value = cf.port_start.value; 
	    //cf.internal_port_end.value = cf.port_end.value;
	}
}
//-->

</script>
</head>
<body  leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" onload="change_size(); init();" class="page-body"  onResize="change_size();" >
<img class="cover-image" src="<%74%>">
<img class="body-image" src="<%75%>">
<div id="full-page-container">

<form id="target"  name="formname" action="pforward.cgi" method="POST">
<input type="hidden" name="buttonHit"><input type="hidden" name="buttonValue">
	<img class="subtop-image" src="<%76%>">
<div class="subhead2"> <%1024%></div>
<table border="0"    style="height:370px"  class="subhead2-table">

<tr align="left" valign="middle">
<td  style="padding-top:10px;padding-bottom:10px" align="center" colspan="2" class="table-seperate-border">
&nbsp;&nbsp;&nbsp;<button value="<%78%>"  onclick="buttonClick(this,'<%78%>');if(!Check()) return false; Final();" type="submit" name="apply" class=<%79%> > <span class="<%80%>" ><%81%>&nbsp;<span class="apply-icon">&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="<%82%>">&nbsp;&nbsp;&nbsp;</span></button>
&nbsp;&nbsp;&nbsp;<button value="<%83%>" onClick="buttonClick(this,'<%83%>');location.href='FW_forward3.htm'" type="button" name="cancel" class="button-rule" ><span class="roundleft_button"><span class ="cancel-icon">&nbsp;&nbsp;&nbsp;&nbsp;<%84%></span></span><span class="roundright_button">&nbsp;&nbsp;&nbsp;&nbsp;</span></button>
</td>
</tr>

<tr><td class="scrollpane-table-seperate-border" colspan="2"><div class="scroll-pane" style="height:365px;width:620px;overflow:auto;scrolling:auto"><table style="border-collapse:collapse;width:97%">
		
        <tr><td colspan="2" height="12" ><div style="background-image:url('liteblue.gif');width:100%">&nbsp;</div></td></tr>
        <tr>
	        <td colspan="2">
		        <table border ="0" cellpadding ="0" cellspacing ="0" width="100%">
			        <tr>
		 	            <TD NOWRAP width="37%"><%1001%></td>
				        <TD NOWRAP width="63%">
				            <input type="text" name="portname" size="30" maxlength="30" value=""></td></tr>
				    <tr>
				        <TD NOWRAP width="37%"><%691%></td>
				        <TD NOWRAP width="63%">
				            <select name="srvtype" size="1">
				                <option value="TCP/UDP"><%694%></option>
				                <option value="TCP"><%692%></option>
				                <option value="UDP"><%693%></option></SELECT></TD></TR>
		            <tr>
				        <TD NOWRAP width="37%"><%1025%></td>
				        <TD NOWRAP width="63%">
				            <input type="text" class="num" name="port_start" size="27" maxlength="256" value="" onBlur="internal_port_update()" onFocus="this.select();">(1~65534)	</td></tr>
		            <tr>
                    <TD  NOWRAP colspan="2"><%1026%></td>
                    </tr>
		            <tr>
                       <TD colspan="2">
                        <input type="checkbox" name="same_range" value="same_range" onClick="setInternalPortDisable();"> <%1027%> </td></tr>

		            <tr>
				        <TD NOWRAP width="37%"><div id="intportcolor"><%1028%></div></td>
				        <TD NOWRAP width="63%">
				            <input type="text" class="num" name="internal_port_start" size="27" maxlength="256" value="" onBlur="" onFocus="this.select();">(1~65534)	</td></tr>
				    <tr>
                    <TD  colspan="2"><div id="intporttype"><%1026%></div></td>
                    </tr>
		            <tr>
				        <TD NOWRAP width="37%"><%1010%></td>
				        <TD NOWRAP width="63%">
				            <input type="text" class="num" name="server_ip1" size="4" maxlength="3" value="192" onFocus="this.select();" onkeydown="bscheck(event,this,1)" onkeyup="jumpcheck(this,0)">.
                            <input type="text" class="num" name="server_ip2" size="4" maxlength="3" value="168" onFocus="this.select();" onkeydown="bscheck(event,this,0)" onkeyup="jumpcheck(this,0)">.
                            <input type="text" class="num" name="server_ip3" size="4" maxlength="3" value="0" onFocus="this.select();" onkeydown="bscheck(event,this,0)" onkeyup="jumpcheck(this,0)">.
                            <input type="text" class="num" name="server_ip4" size="4" maxlength="3" value="" onFocus="this.select();" onkeydown="bscheck(event,this,0)" onkeyup="jumpcheck(this,1)"></td></tr>
			        <tr>
				        <TD NOWRAP width="37%"><img src="spacer.gif" width="1" height="18" border="0" alt="" /></td>
				        <TD NOWRAP width="63%"><%1029%></td></tr>
                    <tr>
				        <TD NOWRAP width="37%"><img src="spacer.gif" width="1" height="18" border="0" alt="" /></td>
				        <TD NOWRAP width="63%">
				            <table border="1" cellpadding="2" cellspacing="0" width="100%">
                            <tr>
                             <td nowrap align="center" width="20%"><span class="thead"> &nbsp;</span></td>
                             <td nowrap align="center" width="30%"><span class="thead"><%533%></span></td>
                             <td nowrap align="center" width="50%"><span class="thead"><%730%></span></td>
                            </tr><%1030%></table>
				        </td>
				    </tr>				        
			    </table></td></tr>
        <tr><td colspan="2" height="12" ><div style="background-image:url('liteblue.gif');width:100%">&nbsp;</div></td></tr>
        
    </table></div></td></tr>
<tr valign="middle" align="center"><td class="table-seperate-border" colspan="2" style="padding-left:0px"><div class="help-frame-div" > <iframe id="helpframe"  src="FW_forward_service_h.htm" class="help-iframe" scrolling="no" name="helpframe" frameborder="0" onload="showHelpIframe();"></iframe> </div> </td> </tr>
</table>
   <img class="subfooter-image" src="img/subhead2-bottom.gif">
<div class="subhead2-bottom" >
    <span style="float:left;padding-left:10px;padding-top:5px"><img src="img/help-icon.gif" onmouseover="changeCursorPointer();" onclick="showHelpIframe();" onmouseout="changeCursorDefault();"></span>
    <span class="subhead2-text" style="float:left;padding-left:3px;" onclick="showHelpIframe();" onmouseover="changeCursorPointer();" onmouseout="changeCursorDefault();"> <%266%> </span>
    <span class="button-help-arrow">
      <img src="img/helparrowdown-icon.gif" id="help-button" onclick="showHelpIframe();" onmouseover="changeCursorPointer();" onmouseout="changeCursorDefault();" ></span>
    <span class="subhead2-text" style="text-decoration:underline;float:right;padding-right:10px" onclick="showHelpIframe();" onmouseover="changeCursorPointer();" onmouseout="changeCursorDefault();"> <%267%> </span>
      </div>



    <input type="hidden" name="action" value="init">
    <input type="hidden" name="oldService" value="<%1031%>">
    <input type="hidden" name="oldService2" value="<%1032%>">
    <input type="hidden" name="oldService3" value="<%1033%>">
    <input type="hidden" name="oldType" value="<%1034%>">
    <input type="hidden" name="newType" value="">
    <input type="hidden" name="oldSport" value="<%1035%>">
    <input type="hidden" name="oldInternalSport" value="<%1036%>">
    <input type="hidden" name="oldIP" value="<%1037%>">
    <input type="hidden" name="newIP" value="">
    <input type="hidden" name="lanIP" value="<%1016%>">
    <input type="hidden" name="entryData" value="<%1017%>">
    <input type="hidden" name="arrange_flag" value="<%1018%>">
    <input type="hidden" name="pf_services_tbl" value="<%1038%>">
    

<a name="helpframe-anchor"></a>
</form>

</div>
</body>
</html>

